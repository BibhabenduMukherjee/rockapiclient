name: Build and Deploy (Pages Disabled)

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
      
    - name: Run linting
      run: npm run lint
      
    - name: Build application
      run: npm run build
      
    - name: Generate platform icons
      run: |
        # Install ImageMagick
        sudo apt-get update
        sudo apt-get install -y imagemagick
        
        # Install png2icons for proper ICNS generation
        npm install -g png2icons
        
        # Generate ICO file for Windows (with multiple sizes)
        convert public/icon.png -resize 16x16 public/icon-16.png
        convert public/icon.png -resize 32x32 public/icon-32.png
        convert public/icon.png -resize 256x256 public/icon-256.png
        convert public/icon-16.png public/icon-32.png public/icon-256.png public/icon.ico
        
        # Generate ICNS file for macOS using png2icons
        png2icons public/icon.png public/icon.icns -icns
        
        # Clean up temporary files
        rm -f public/icon-*.png
        
        echo "Generated icons:"
        ls -la public/icon.*
      
    - name: Build Electron app
      run: npm run dist
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: electron-app-build
        path: |
          dist/
          !dist/mac-arm64/
        retention-days: 1

  # Deploy job - only runs if build is successful
  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    permissions:
      contents: read
      # pages: write
      # id-token: write
      
    # environment:
    #   name: github-pages
    #   url: ${{ steps.deployment.outputs.page_url }}
      
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: electron-app-build
        path: dist/
        
    # - name: Setup Pages
    #   uses: actions/configure-pages@v4
    #   with:
    #     enablement: true
      
    - name: Create deployment package
      run: |
        # Create a simple HTML page for GitHub Pages
        mkdir -p public
        cat > public/index.html << 'EOF'
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>RockApiClient - REST API Client</title>
            <style>
                body {
                    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
                    max-width: 800px;
                    margin: 0 auto;
                    padding: 2rem;
                    line-height: 1.6;
                    color: #333;
                }
                .header {
                    text-align: center;
                    margin-bottom: 3rem;
                }
                .download-section {
                    background: #f8f9fa;
                    padding: 2rem;
                    border-radius: 8px;
                    margin: 2rem 0;
                }
                .download-btn {
                    display: inline-block;
                    background: #1890ff;
                    color: white;
                    padding: 12px 24px;
                    text-decoration: none;
                    border-radius: 6px;
                    font-weight: 500;
                    margin: 0.5rem;
                }
                .download-btn:hover {
                    background: #40a9ff;
                }
                .features {
                    display: grid;
                    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
                    gap: 1rem;
                    margin: 2rem 0;
                }
                .feature {
                    background: white;
                    padding: 1.5rem;
                    border-radius: 8px;
                    box-shadow: 0 2px 8px rgba(0,0,0,0.1);
                }
                .status {
                    display: inline-block;
                    padding: 4px 8px;
                    border-radius: 4px;
                    font-size: 0.8rem;
                    font-weight: 500;
                }
                .status.success {
                    background: #f6ffed;
                    color: #52c41a;
                    border: 1px solid #b7eb8f;
                }
            </style>
        </head>
        <body>
            <div class="header">
                <h1>üöÄ RockApiClient</h1>
                <p>A powerful REST API client built with Electron and React</p>
                <span class="status success">‚úÖ Build Successful</span>
            </div>
            
            <div class="download-section">
                <h2>üì• Download Latest Release</h2>
                <p>Download the latest version of RockApiClient for your platform:</p>
                <a href="https://github.com/${{ github.repository }}/releases/latest" class="download-btn">
                    View All Releases
                </a>
            </div>
            
            <h2>‚ú® Features</h2>
            <div class="features">
                <div class="feature">
                    <h3>üéØ Smart Request Builder</h3>
                    <p>Intuitive interface for building and testing API requests with support for all HTTP methods.</p>
                </div>
                <div class="feature">
                    <h3>üìö Request Collections</h3>
                    <p>Organize your API requests into collections for better project management.</p>
                </div>
                <div class="feature">
                    <h3>üåç Environment Variables</h3>
                    <p>Manage different environments (dev, staging, prod) with variable substitution.</p>
                </div>
                <div class="feature">
                    <h3>üìä Request History</h3>
                    <p>Keep track of all your API calls with detailed request/response information.</p>
                </div>
                <div class="feature">
                    <h3>üîç Request Comparison</h3>
                    <p>Compare different versions of requests to track changes and debug issues.</p>
                </div>
                <div class="feature">
                    <h3>‚å®Ô∏è Keyboard Shortcuts</h3>
                    <p>Power-user features with comprehensive keyboard shortcuts for faster workflow.</p>
                </div>
                <div class="feature">
                    <h3>üé® Customizable Themes</h3>
                    <p>Personalize your workspace with custom themes and layout preferences.</p>
                </div>
                <div class="feature">
                    <h3>üìù Code Generation</h3>
                    <p>Generate code snippets in multiple languages (cURL, fetch, axios, httpie).</p>
                </div>
            </div>
            
            <h2>üõ†Ô∏è Development</h2>
            <p>This project is built with modern web technologies:</p>
            <ul>
                <li><strong>Electron</strong> - Cross-platform desktop app framework</li>
                <li><strong>React</strong> - Modern UI library with hooks</li>
                <li><strong>TypeScript</strong> - Type-safe JavaScript</li>
                <li><strong>Ant Design</strong> - Professional UI components</li>
                <li><strong>Webpack</strong> - Module bundler</li>
            </ul>
            
            <h2>üìñ Documentation</h2>
            <p>For detailed documentation, development guides, and API reference, visit our repository:</p>
            <a href="https://github.com/${{ github.repository }}" class="download-btn">
                View on GitHub
            </a>
            
            <footer style="margin-top: 3rem; padding-top: 2rem; border-top: 1px solid #eee; text-align: center; color: #666;">
                <p>Built with ‚ù§Ô∏è using Electron and React</p>
                <p>Last updated: <span id="lastUpdated"></span></p>
            </footer>
            
            <script>
                document.getElementById('lastUpdated').textContent = new Date().toLocaleDateString();
            </script>
        </body>
        </html>
        EOF
        
    # - name: Upload to GitHub Pages
    #   uses: actions/upload-pages-artifact@v3
    #   with:
    #     path: public
        
    # - name: Deploy to GitHub Pages
    #   id: deployment
    #   uses: actions/deploy-pages@v4
